diff a/src/main/java/BookingREST/Businesses/BusinessesTests.java b/src/main/java/BookingREST/Businesses/BusinessesTests.java	(rejected hunks)
@@ -325,23 +325,12 @@
     }
 
     @AfterClass
-    public void deleteBefore(){}
-    ResponseBody response = given().contentType(ContentType.JSON)
-            .header("Authorization", usertoken)
-            .filter(new RequestLoggingFilter())
-            .filter(new ResponseLoggingFilter())
-            .when().get("http://213.136.86.27:8083/api/v1.0/promoters/" + promoterId).thenReturn().body();
-
-    ResponseBody response1 = given().contentType(ContentType.JSON)
-            .header("Authorization", usertoken)
-            .filter(new RequestLoggingFilter())
-            .filter(new ResponseLoggingFilter())
-            .when().get("http://213.136.86.27:8083/api/v1.0/sector/" + sectorId).thenReturn().body();
-
-    ResponseBody response2 = given().contentType(ContentType.JSON)
-            .header("Authorization", usertoken)
-            .filter(new RequestLoggingFilter())
-            .filter(new ResponseLoggingFilter())
-            .when().get("http://213.136.86.27:8083/api/v1.0/strategy/" + strategyId).thenReturn().body();
+    public void Z_deleteBefore() {
+        ResponseBody response = given().contentType(ContentType.JSON).header("Authorization", token).filter(new RequestLoggingFilter()).filter(new ResponseLoggingFilter()).when().delete("http://213.136.86.27:8083/api/v1.0/promoters/" + promoterId).thenReturn().body();
+
+        ResponseBody response1 = given().contentType(ContentType.JSON).header("Authorization", token).filter(new RequestLoggingFilter()).filter(new ResponseLoggingFilter()).when().delete("http://213.136.86.27:8083/api/v1.0/sector/" + sectorId).thenReturn().body();
+
+        ResponseBody response2 = given().contentType(ContentType.JSON).header("Authorization", token).filter(new RequestLoggingFilter()).filter(new ResponseLoggingFilter()).when().delete("http://213.136.86.27:8083/api/v1.0/strategy/" + strategyId).thenReturn().body();
+    }
 
     }
